(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{580:function(_,v,t){"use strict";t.r(v);var e=t(6),s=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"_1、ajax"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、ajax"}},[_._v("#")]),_._v(" 1、Ajax")]),_._v(" "),t("p",[_._v("英文全称为 "),t("code",[_._v("Asynchronous JavaScript + XML")]),_._v(" ，翻译过来就是"),t("strong",[_._v("异步JavaScript和XML")]),_._v("。")]),_._v(" "),t("p",[_._v("AJAX 不是新的编程语言，而是一种使用现有标准的新方法。它可以创建更好、更快且交互性更强的 web 应用程序。")]),_._v(" "),t("p",[_._v("Ajax 最重要的特性就是可以"),t("strong",[_._v("局部刷新页面")]),_._v("。")]),_._v(" "),t("h2",{attrs:{id:"_2、axios"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、axios"}},[_._v("#")]),_._v(" 2、Axios")]),_._v(" "),t("p",[_._v("Axios是一个基于"),t("code",[_._v("promise")]),_._v(" 的 "),t("code",[_._v("HTTP")]),_._v(" 库，可以用在浏览器和"),t("code",[_._v("node.js")]),_._v("中。在服务端它使用原生 "),t("code",[_._v("Node.js")]),_._v(" "),t("code",[_._v("http")]),_._v(" 模块，而在客户端则使用 "),t("code",[_._v("XMLHttpRequest")]),_._v("。")]),_._v(" "),t("p",[_._v("这里我们只关注客户端的 "),t("code",[_._v("Axios")]),_._v("，它是基于"),t("code",[_._v("XHR")]),_._v("进行"),t("strong",[_._v("二次封装")]),_._v("形成的工具库。")]),_._v(" "),t("p",[_._v("客户端 "),t("code",[_._v("Axios")]),_._v(" 的主要特性有：")]),_._v(" "),t("ul",[t("li",[_._v("从浏览器创建 "),t("code",[_._v("XMLHttpRequests")])]),_._v(" "),t("li",[_._v("支持 "),t("code",[_._v("Promise API")])]),_._v(" "),t("li",[_._v("拦截请求和响应")]),_._v(" "),t("li",[_._v("转换请求和响应数据")]),_._v(" "),t("li",[_._v("取消请求")]),_._v(" "),t("li",[_._v("自动转换"),t("code",[_._v("JSON")]),_._v("数据")]),_._v(" "),t("li",[_._v("客户端支持防御XSRF")])]),_._v(" "),t("p",[_._v("需要注意的是："),t("strong",[_._v("Axios是对XMLHttpRequest的封装，而Fetch是一种新的获取资源的接口方式，并不是对XMLHttpRequest的封装。")])]),_._v(" "),t("p",[_._v("它们"),t("strong",[_._v("最大的不同点在于Fetch是浏览器原生支持，而Axios需要引入Axios库。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);