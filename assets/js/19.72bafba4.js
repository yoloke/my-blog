(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{542:function(t,s,a){"use strict";a.r(s);var n=a(6),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("插入排序（Insertion Sort），一般也被称为直接插入排序。")]),t._v(" "),a("p",[t._v("插入排序的核心思想是"),a("strong",[t._v("局部有序")]),t._v("。")]),t._v(" "),a("p",[t._v("其主要的实现思想是将数据按照一定的顺序一个一个的插入到有序的表中，最终得到的序列就是已经排序好的数据")]),t._v(" "),a("p",[t._v("例如：一个无序数组 3、1、7、5、2、4、9、6，将其升序的结果则如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一开始有序表中无数据，直接插入3")])]),t._v(" "),a("li",[a("p",[t._v("从第二个数开始，插入元素1，然后和有序表中记录3比较，1<3，所以插入到记录 3 的左侧")])])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://could-img.oss-cn-hangzhou.aliyuncs.com/202210161638426.png",alt:"img"}}),t._v(" "),a("ul",[a("li",[t._v("向有序表插入记录 7 时，同有序表中记录 3 进行比较，3<7，所以插入到记录 3 的右侧")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://could-img.oss-cn-hangzhou.aliyuncs.com/202210161638198.png",alt:"img"}}),t._v(" "),a("ul",[a("li",[t._v("向有序表中插入记录 5 时，同有序表中记录 7 进行比较，5<7，同时 5>3，所以插入到 3 和 7 中间")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://could-img.oss-cn-hangzhou.aliyuncs.com/202210161638516.png",alt:"img"}}),t._v(" "),a("ul",[a("li",[t._v("照此规律，依次将无序表中的记录 4，9 和 6插入到有序表中")])]),t._v(" "),a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://could-img.oss-cn-hangzhou.aliyuncs.com/202210161638566.png",alt:"img"}}),t._v(" "),a("p",[t._v("在插入排序中，当待排序数组是有序时，是最优的情况，只需 "),a("strong",[t._v("当前数")]),t._v(" 跟 "),a("strong",[t._v("前一个数")]),t._v(" 比较一下就可以了，这时一共需要比较 "),a("strong",[a("code",[t._v("N- 1")])]),t._v(" 次，时间复杂度为 "),a("strong",[a("code",[t._v("O(n)")])])]),t._v(" "),a("p",[t._v("最坏的情况是待排序数组是逆序的，此时需要比较次数最多，总次数记为："),a("strong",[a("code",[t._v("1 + 2 + 3 + … + (n-1) = n*(n-1)/2 =1/2 n² - 1/2n")])]),t._v("，所以，插入排序"),a("strong",[t._v("最坏情况")]),t._v("下的时间复杂度为 "),a("strong",[a("code",[t._v("O(n²)")])])]),t._v(" "),a("p",[t._v("而选择排序无论多少个数据，时间复杂度都为 "),a("strong",[a("code",[t._v("O(n²)")])])]),t._v(" "),a("p",[t._v("通过上面了解，可以看到插入排序是一种稳定的排序方式")]),t._v(" "),a("h2",{attrs:{id:"_1-插入排序实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-插入排序实现"}},[t._v("#")]),t._v(" 1. 插入排序实现")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("将第一待排序序列第一个元素看做一个有序序列，把第二个元素到最后一个元素当成是未排序序列。")])]),t._v(" "),a("li",[a("p",[t._v("从头到尾依次扫描未排序序列，将扫描到的每个元素插入有序序列的适当位置")])]),t._v(" "),a("li",[a("p",[t._v("如果待插入的元素与有序序列中的某个元素相等，则将待插入元素插入到相等元素的后面")])])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://could-img.oss-cn-hangzhou.aliyuncs.com/202210161724639.gif",alt:"img"}}),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertionSort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" preIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//外层循环 从下标为1的元素开始循环  ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        preIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        current "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//内层循环 获取i位置的元素，和前面的数据进行比较")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("preIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n            arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preIndex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            preIndex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preIndex"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("h2",{attrs:{id:"_2-应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-应用场景"}},[t._v("#")]),t._v(" 2. 应用场景")]),t._v(" "),a("p",[t._v("插入排序时间复杂度是 O(n²)，适用于数据量不大，算法稳定性要求高，且数据局部或整体有序的数列排序")])])}),[],!1,null,null,null);s.default=r.exports}}]);